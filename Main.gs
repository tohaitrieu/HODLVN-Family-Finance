/**
 * ===============================================
 * MAIN.GS - FILE CH√çNH H·ªÜ TH·ªêNG QU·∫¢N L√ù T√ÄI CH√çNH v3.2
 * ===============================================
 * 
 * Ki·∫øn tr√∫c Module:
 * - Main.gs: ƒêi·ªÅu ph·ªëi, Menu, UI, Setup Wizard
 * - SheetInitializer.gs: Kh·ªüi t·∫°o c√°c sheet
 * - FormHandlers.gs: X·ª≠ l√Ω form nh·∫≠p li·ªáu
 * - DataProcessors.gs: X·ª≠ l√Ω giao d·ªãch
 * - BudgetManager.gs: Qu·∫£n l√Ω ng√¢n s√°ch
 * - DashboardManager.gs: Qu·∫£n l√Ω dashboard & th·ªëng k√™
 * 
 * VERSION: 3.2 - Added Setup Wizard
 */

// ==================== C·∫§U H√åNH TO√ÄN C·ª§C ====================

const APP_CONFIG = {
  VERSION: '3.2',
  APP_NAME: 'üí∞ Qu·∫£n l√Ω T√†i ch√≠nh',
  
  // Danh s√°ch c√°c sheet
  SHEETS: {
    INCOME: 'THU',
    EXPENSE: 'CHI',
    DEBT_PAYMENT: 'TR·∫¢ N·ª¢',
    STOCK: 'CH·ª®NG KHO√ÅN',
    GOLD: 'V√ÄNG',
    CRYPTO: 'CRYPTO',
    OTHER_INVESTMENT: 'ƒê·∫¶U T∆Ø KH√ÅC',
    DEBT_MANAGEMENT: 'QU·∫¢N L√ù N·ª¢',
    BUDGET: 'BUDGET',
    DASHBOARD: 'T·ªîNG QUAN'
  },
  
  // M√†u s·∫Øc theme
  COLORS: {
    PRIMARY: '#4472C4',
    SUCCESS: '#70AD47',
    DANGER: '#E74C3C',
    WARNING: '#F39C12',
    INFO: '#3498DB',
    HEADER_BG: '#4472C4',
    HEADER_TEXT: '#FFFFFF'
  },
  
  // Format s·ªë
  FORMATS: {
    NUMBER: '#,##0" VNƒê"',
    PERCENTAGE: '0.00%',
    DATE: 'dd/mm/yyyy'
  }
};

// ==================== MENU CH√çNH ====================

/**
 * T·∫°o menu khi m·ªü file
 */
function onOpen() {
  const ui = SpreadsheetApp.getUi();
  
  ui.createMenu(APP_CONFIG.APP_NAME)
    // === NH√ìM 1: NH·∫¨P LI·ªÜU ===
    .addSubMenu(ui.createMenu('üìù Nh·∫≠p li·ªáu')
      .addItem('üì• Nh·∫≠p Thu nh·∫≠p', 'showIncomeForm')
      .addItem('üì§ Nh·∫≠p Chi ti√™u', 'showExpenseForm')
      .addItem('üí≥ Th√™m Kho·∫£n N·ª£', 'showDebtManagementForm')
      .addItem('üí≥ Tr·∫£ n·ª£', 'showDebtPaymentForm')
      .addSeparator()
      .addItem('üìà Giao d·ªãch Ch·ª©ng kho√°n', 'showStockForm')
      .addItem('ü™ô Giao d·ªãch V√†ng', 'showGoldForm')
      .addItem('‚Çø Giao d·ªãch Crypto', 'showCryptoForm')
      .addItem('üíº ƒê·∫ßu t∆∞ kh√°c', 'showOtherInvestmentForm'))
    
    .addSeparator()

    // === NH√ìM 2: BUDGET ===
    .addSubMenu(ui.createMenu('üíµ Ng√¢n s√°ch')
      .addItem('‚ö†Ô∏è Ki·ªÉm tra Budget', 'checkBudgetWarnings')
      .addItem('üìä B√°o c√°o Chi ti√™u', 'showExpenseReport')
      .addItem('üí∞ B√°o c√°o ƒê·∫ßu t∆∞', 'showInvestmentReport'))
    
    .addSeparator()
    
    // === NH√ìM 3: TH·ªêNG K√ä ===
    .addSubMenu(ui.createMenu('üìä Th·ªëng k√™ & Dashboard')
      .addItem('üîÑ C·∫≠p nh·∫≠t Dashboard', 'refreshDashboard')
      .addSeparator()
      .addItem('üìÖ Xem T·∫•t c·∫£', 'viewAll')
      .addItem('üìä Xem NƒÉm hi·ªán t·∫°i', 'viewCurrentYear')
      .addItem('üóìÔ∏è Xem Qu√Ω hi·ªán t·∫°i', 'viewCurrentQuarter')
      .addItem('üìÜ Xem Th√°ng hi·ªán t·∫°i', 'viewCurrentMonth'))
    
    .addSeparator()
    
    // === NH√ìM 4: TI·ªÜN √çCH ===
    .addSubMenu(ui.createMenu('üõ†Ô∏è Ti·ªán √≠ch')
      .addItem('üîç T√¨m ki·∫øm giao d·ªãch', 'searchTransaction')
      .addItem('üì§ Xu·∫•t b√°o c√°o PDF', 'exportToPDF')
      .addItem('üóëÔ∏è X√≥a d·ªØ li·ªáu test', 'clearTestData'))
    
    .addSeparator()

    // === NH√ìM 5: KH·ªûI T·∫†O SHEET ===
    .addSubMenu(ui.createMenu('‚öôÔ∏è Kh·ªüi t·∫°o Sheet')
      .addItem('üîÑ Kh·ªüi t·∫°o T·∫§T C·∫¢ Sheet', 'initializeAllSheets')
      .addSeparator()
      .addItem('üì• Kh·ªüi t·∫°o Sheet THU', 'initializeIncomeSheet')
      .addItem('üì§ Kh·ªüi t·∫°o Sheet CHI', 'initializeExpenseSheet')
      .addItem('üí≥ Kh·ªüi t·∫°o Sheet TR·∫¢ N·ª¢', 'initializeDebtPaymentSheet')
      .addItem('üìä Kh·ªüi t·∫°o Sheet QU·∫¢N L√ù N·ª¢', 'initializeDebtManagementSheet')
      .addSeparator()
      .addItem('üìà Kh·ªüi t·∫°o Sheet CH·ª®NG KHO√ÅN', 'initializeStockSheet')
      .addItem('ü™ô Kh·ªüi t·∫°o Sheet V√ÄNG', 'initializeGoldSheet')
      .addItem('‚Çø Kh·ªüi t·∫°o Sheet CRYPTO', 'initializeCryptoSheet')
      .addItem('üíº Kh·ªüi t·∫°o Sheet ƒê·∫¶U T∆Ø KH√ÅC', 'initializeOtherInvestmentSheet')
      .addSeparator()
      .addItem('üí∞ Kh·ªüi t·∫°o Sheet BUDGET', 'initializeBudgetSheet')
      .addItem('üìä Kh·ªüi t·∫°o Sheet T·ªîNG QUAN', 'initializeDashboardSheet'))
    
    .addSeparator()
    
    // === NH√ìM 6: TR·ª¢ GI√öP ===
    .addItem('‚ÑπÔ∏è H∆∞·ªõng d·∫´n s·ª≠ d·ª•ng', 'showInstructions')
    .addItem('üìñ Gi·ªõi thi·ªáu h·ªá th·ªëng', 'showAbout')
    
    .addToUi();
}

// ==================== HI·ªÇN TH·ªä FORM ====================

/**
 * Hi·ªÉn th·ªã form nh·∫≠p thu
 */
function showIncomeForm() {
  showForm('IncomeForm', 'üì• Nh·∫≠p Thu nh·∫≠p', 450, 400);
}

/**
 * Hi·ªÉn th·ªã form nh·∫≠p chi
 */
function showExpenseForm() {
  showForm('ExpenseForm', 'üì§ Nh·∫≠p Chi ti√™u', 450, 450);
}

/**
 * Hi·ªÉn th·ªã form tr·∫£ n·ª£
 */
function showDebtPaymentForm() {
  showForm('DebtPaymentForm', 'üí≥ Tr·∫£ n·ª£', 450, 450);
}
/**
 * Hi·ªÉn th·ªã form th√™m kho·∫£n n·ª£ m·ªõi
 */
function showDebtManagementForm() {
  showForm('DebtManagementForm', 'üí≥ Th√™m Kho·∫£n N·ª£ M·ªõi', 500, 650);
}
/**
 * Hi·ªÉn th·ªã form giao d·ªãch ch·ª©ng kho√°n
 */
function showStockForm() {
  showForm('StockForm', 'üìà Giao d·ªãch Ch·ª©ng kho√°n', 450, 500);
}

/**
 * Hi·ªÉn th·ªã form giao d·ªãch v√†ng
 */
function showGoldForm() {
  showForm('GoldForm', 'ü™ô Giao d·ªãch V√†ng', 450, 550);
}

/**
 * Hi·ªÉn th·ªã form giao d·ªãch crypto
 */
function showCryptoForm() {
  showForm('CryptoForm', '‚Çø Giao d·ªãch Crypto', 450, 550);
}

/**
 * Hi·ªÉn th·ªã form ƒë·∫ßu t∆∞ kh√°c
 */
function showOtherInvestmentForm() {
  showForm('OtherInvestmentForm', 'üíº ƒê·∫ßu t∆∞ kh√°c', 450, 550);
}

/**
 * H√†m helper hi·ªÉn th·ªã form
 */
function showForm(formName, title, width, height) {
  try {
    const html = HtmlService.createHtmlOutputFromFile(formName)
      .setWidth(width)
      .setHeight(height);
    SpreadsheetApp.getUi().showModalDialog(html, title);
  } catch (error) {
    showError(`Kh√¥ng th·ªÉ m·ªü form ${formName}`, error.message);
  }
}

// ==================== SETUP WIZARD - NEW IN v3.2 ====================

/**
 * Kh·ªüi t·∫°o t·∫•t c·∫£ c√°c sheet - PHI√äN B·∫¢N M·ªöI V·ªöI SETUP WIZARD
 * Thay th·∫ø quy tr√¨nh kh·ªüi t·∫°o c≈© b·∫±ng wizard 3 b∆∞·ªõc
 */
function initializeAllSheets() {
  // Hi·ªÉn th·ªã Setup Wizard thay v√¨ confirm dialog
  showSetupWizard();
}

/**
 * Hi·ªÉn th·ªã Setup Wizard
 */
function showSetupWizard() {
  try {
    const html = HtmlService.createHtmlOutputFromFile('SetupWizard')
      .setWidth(700)
      .setHeight(650);
    SpreadsheetApp.getUi().showModalDialog(html, 'üöÄ Thi·∫øt l·∫≠p H·ªá th·ªëng Qu·∫£n l√Ω T√†i ch√≠nh v3.2');
  } catch (error) {
    showError('Kh√¥ng th·ªÉ m·ªü Setup Wizard', 
      'Vui l√≤ng ƒë·∫£m b·∫£o file SetupWizard.html ƒë√£ ƒë∆∞·ª£c t·∫°o trong Apps Script.\n\n' +
      'L·ªói: ' + error.message);
  }
}

/**
 * X·ª≠ l√Ω d·ªØ li·ªáu t·ª´ Setup Wizard
 * @param {Object} setupData - D·ªØ li·ªáu t·ª´ form wizard
 * @return {Object} K·∫øt qu·∫£ th·ª±c thi
 */
function processSetupWizard(setupData) {
  try {
    const ss = getSpreadsheet();
    
    // ============================================================
    // B∆Ø·ªöC 1: Kh·ªüi t·∫°o t·∫•t c·∫£ sheets (KH√îNG c√≥ d·ªØ li·ªáu m·∫´u)
    // ============================================================
    
    // Sheet THU - Kh·ªüi t·∫°o th·ªß c√¥ng ƒë·ªÉ kh√¥ng c√≥ d·ªØ li·ªáu m·∫´u
    let sheet = ss.getSheetByName(APP_CONFIG.SHEETS.INCOME);
    if (sheet) ss.deleteSheet(sheet);
    sheet = ss.insertSheet(APP_CONFIG.SHEETS.INCOME);
    
    const incomeHeaders = ['STT', 'Ng√†y', 'S·ªë ti·ªÅn', 'Ngu·ªìn thu', 'Ghi ch√∫'];
    sheet.getRange(1, 1, 1, incomeHeaders.length)
      .setValues([incomeHeaders])
      .setFontWeight('bold')
      .setHorizontalAlignment('center')
      .setBackground(APP_CONFIG.COLORS.HEADER_BG)
      .setFontColor(APP_CONFIG.COLORS.HEADER_TEXT);
    
    sheet.setColumnWidth(1, 50);
    sheet.setColumnWidth(2, 100);
    sheet.setColumnWidth(3, 120);
    sheet.setColumnWidth(4, 150);
    sheet.setColumnWidth(5, 300);
    
    sheet.getRange('A2:A').setNumberFormat('0');
    sheet.getRange('B2:B').setNumberFormat(APP_CONFIG.FORMATS.DATE);
    sheet.getRange('C2:C').setNumberFormat(APP_CONFIG.FORMATS.NUMBER);
    sheet.setFrozenRows(1);
    
    // Data validation cho Ngu·ªìn thu
    const sourceRange = sheet.getRange('D2:D1000');
    sourceRange.setNumberFormat('@'); // Set as plain text TR∆Ø·ªöC validation
    const sourceRule = SpreadsheetApp.newDataValidation()
      .requireValueInList([
        'L∆∞∆°ng',
        'MMO (Make Money Online)',
        'Th∆∞·ªüng',
        'B√°n CK',
        'B√°n V√†ng',
        'B√°n Crypto',
        'L√£i ƒë·∫ßu t∆∞',
        'Thu h·ªìi n·ª£',
        'Kh√°c'
      ])
      .setAllowInvalid(false)
      .build();
    sourceRange.setDataValidation(sourceRule);
    
    // Sheet CHI - Kh·ªüi t·∫°o th·ªß c√¥ng ƒë·ªÉ kh√¥ng c√≥ d·ªØ li·ªáu m·∫´u
    sheet = ss.getSheetByName(APP_CONFIG.SHEETS.EXPENSE);
    if (sheet) ss.deleteSheet(sheet);
    sheet = ss.insertSheet(APP_CONFIG.SHEETS.EXPENSE);
    
    const expenseHeaders = ['STT', 'Ng√†y', 'S·ªë ti·ªÅn', 'Danh m·ª•c', 'Chi ti·∫øt', 'Ghi ch√∫'];
    sheet.getRange(1, 1, 1, expenseHeaders.length)
      .setValues([expenseHeaders])
      .setFontWeight('bold')
      .setHorizontalAlignment('center')
      .setBackground(APP_CONFIG.COLORS.HEADER_BG)
      .setFontColor(APP_CONFIG.COLORS.HEADER_TEXT);
    
    sheet.setColumnWidth(1, 50);
    sheet.setColumnWidth(2, 100);
    sheet.setColumnWidth(3, 120);
    sheet.setColumnWidth(4, 120);
    sheet.setColumnWidth(5, 200);
    sheet.setColumnWidth(6, 250);
    
    sheet.getRange('A2:A').setNumberFormat('0');
    sheet.getRange('B2:B').setNumberFormat(APP_CONFIG.FORMATS.DATE);
    sheet.getRange('C2:C').setNumberFormat(APP_CONFIG.FORMATS.NUMBER);
    sheet.setFrozenRows(1);
    
    // Data validation cho Danh m·ª•c
    const categoryRange = sheet.getRange('D2:D1000');
    categoryRange.setNumberFormat('@');
    const categoryRule = SpreadsheetApp.newDataValidation()
      .requireValueInList([
        'ƒÇn u·ªëng',
        'ƒêi l·∫°i',
        'Nh√† ·ªü',
        'Y t·∫ø',
        'Gi√°o d·ª•c',
        'Mua s·∫Øm',
        'Gi·∫£i tr√≠',
        'Kh√°c'
      ])
      .setAllowInvalid(false)
      .build();
    categoryRange.setDataValidation(categoryRule);
    
    // Kh·ªüi t·∫°o c√°c sheet c√≤n l·∫°i b·∫±ng SheetInitializer
    SheetInitializer.initializeDebtPaymentSheet();
    SheetInitializer.initializeDebtManagementSheet();
    SheetInitializer.initializeStockSheet();
    SheetInitializer.initializeGoldSheet();
    SheetInitializer.initializeCryptoSheet();
    SheetInitializer.initializeOtherInvestmentSheet();
    
    // ============================================================
    // B∆Ø·ªöC 2: Th√™m s·ªë d∆∞ ban ƒë·∫ßu v√†o THU
    // ============================================================
    const incomeSheet = ss.getSheetByName(APP_CONFIG.SHEETS.INCOME);
    const incomeData = [
      1, // STT
      new Date(setupData.balance.date),
      setupData.balance.amount,
      setupData.balance.source,
      'S·ªë d∆∞ ban ƒë·∫ßu (Setup Wizard)'
    ];
    incomeSheet.appendRow(incomeData);
    
    // ============================================================
    // B∆Ø·ªöC 3: Th√™m kho·∫£n n·ª£ (n·∫øu c√≥)
    // ============================================================
    if (setupData.debt) {
      const debtSheet = ss.getSheetByName(APP_CONFIG.SHEETS.DEBT_MANAGEMENT);
      const startDate = new Date(setupData.debt.date);
      const dueDate = new Date(startDate);
      dueDate.setMonth(dueDate.getMonth() + setupData.debt.term);
      
      const debtData = [
        1, // STT
        setupData.debt.name,
        setupData.debt.principal,
        setupData.debt.rate,
        setupData.debt.term,
        startDate,
        dueDate,
        0, // ƒê√£ tr·∫£ g·ªëc
        0, // ƒê√£ tr·∫£ l√£i
        setupData.debt.principal, // C√≤n n·ª£
        'ƒêang tr·∫£',
        'Kh·ªüi t·∫°o t·ª´ Setup Wizard'
      ];
      debtSheet.appendRow(debtData);
    }
    
    // ============================================================
    // B∆Ø·ªöC 4: Kh·ªüi t·∫°o Budget v·ªõi gi√° tr·ªã t·ª´ form
    // ============================================================
    sheet = ss.getSheetByName(APP_CONFIG.SHEETS.BUDGET);
    if (sheet) ss.deleteSheet(sheet);
    sheet = ss.insertSheet(APP_CONFIG.SHEETS.BUDGET);
    
    // Header
    sheet.getRange('A1').setValue('NG√ÇN S√ÅCH TH√ÅNG')
      .setFontSize(16)
      .setFontWeight('bold')
      .setBackground('#4472C4')
      .setFontColor('white');
    sheet.getRange('A1:D1').merge();
    
    // Section 1: CHI TI√äU
    sheet.getRange('A2').setValue('üìä CHI TI√äU')
      .setFontWeight('bold')
      .setBackground('#E7E6E6');
    sheet.getRange('A2:D2').merge();
    
    const categoryHeaders = ['Danh m·ª•c', 'Ng√¢n s√°ch', 'ƒê√£ chi', 'T·ª∑ l·ªá %'];
    sheet.getRange(3, 1, 1, 4)
      .setValues([categoryHeaders])
      .setFontWeight('bold')
      .setBackground('#D9D9D9');
    
    // Categories v·ªõi budget values t·ª´ form
    const categories = [
      ['ƒÇn u·ªëng', setupData.budget.food],
      ['ƒêi l·∫°i', setupData.budget.transport],
      ['Nh√† ·ªü', setupData.budget.housing],
      ['Y t·∫ø', setupData.budget.health],
      ['Gi√°o d·ª•c', setupData.budget.education],
      ['Mua s·∫Øm', setupData.budget.shopping],
      ['Gi·∫£i tr√≠', setupData.budget.entertainment],
      ['Kh√°c', setupData.budget.other]
    ];
    
    categories.forEach((cat, idx) => {
      const row = 4 + idx;
      sheet.getRange(row, 1).setValue(cat[0]);
      sheet.getRange(row, 2).setValue(cat[1]);
      sheet.getRange(row, 3).setValue(0);
      sheet.getRange(row, 4).setFormula(`=IFERROR(C${row}/B${row}, 0)`);
    });
    
    // Format
    sheet.getRange('B4:C11').setNumberFormat(APP_CONFIG.FORMATS.NUMBER);
    sheet.getRange('D4:D11').setNumberFormat('0.00%');
    
    // Conditional formatting cho t·ª∑ l·ªá
    const percentRange = sheet.getRange('D4:D11');
    
    // Xanh: < 70%
    const rule1 = SpreadsheetApp.newConditionalFormatRule()
      .whenNumberLessThan(0.7)
      .setBackground('#C6EFCE')
      .setRanges([percentRange])
      .build();
    
    // V√†ng: 70-90%
    const rule2 = SpreadsheetApp.newConditionalFormatRule()
      .whenNumberBetween(0.7, 0.9)
      .setBackground('#FFEB9C')
      .setRanges([percentRange])
      .build();
    
    // ƒê·ªè: > 90%
    const rule3 = SpreadsheetApp.newConditionalFormatRule()
      .whenNumberGreaterThan(0.9)
      .setBackground('#FFC7CE')
      .setRanges([percentRange])
      .build();
    
    sheet.setConditionalFormatRules([rule1, rule2, rule3]);
    
    // T·ªïng c·ªông
    sheet.getRange('A12').setValue('T·ªîNG').setFontWeight('bold');
    sheet.getRange('B12').setFormula('=SUM(B4:B11)');
    sheet.getRange('C12').setFormula('=SUM(C4:C11)');
    sheet.getRange('D12').setFormula('=IFERROR(C12/B12, 0)');
    sheet.getRange('B12:C12').setNumberFormat(APP_CONFIG.FORMATS.NUMBER);
    sheet.getRange('D12').setNumberFormat('0.00%');
    
    // Section 2: ƒê·∫¶U T∆Ø & TR·∫¢ N·ª¢
    sheet.getRange('A14').setValue('üí∞ ƒê·∫¶U T∆Ø & TR·∫¢ N·ª¢')
      .setFontWeight('bold')
      .setBackground('#E7E6E6');
    sheet.getRange('A14:D14').merge();
    
    sheet.getRange(15, 1, 1, 4)
      .setValues([['Lo·∫°i', 'Target', 'ƒê√£ ƒë·∫ßu t∆∞/tr·∫£', 'T·ª∑ l·ªá %']])
      .setFontWeight('bold')
      .setBackground('#D9D9D9');
    
    const investmentTypes = [
      ['Ch·ª©ng kho√°n', 0],
      ['V√†ng', 0],
      ['Crypto', 0],
      ['ƒê·∫ßu t∆∞ kh√°c', 0],
      ['Tr·∫£ n·ª£', 0]
    ];
    
    investmentTypes.forEach((type, idx) => {
      const row = 16 + idx;
      sheet.getRange(row, 1).setValue(type[0]);
      sheet.getRange(row, 2).setValue(type[1]);
      sheet.getRange(row, 3).setValue(0);
      sheet.getRange(row, 4).setFormula(`=IFERROR(C${row}/B${row}, 0)`);
    });
    
    sheet.getRange('B16:C20').setNumberFormat(APP_CONFIG.FORMATS.NUMBER);
    sheet.getRange('D16:D20').setNumberFormat('0.00%');
    
    // Column widths
    sheet.setColumnWidth(1, 150);
    sheet.setColumnWidth(2, 130);
    sheet.setColumnWidth(3, 130);
    sheet.setColumnWidth(4, 100);
    
    // ============================================================
    // B∆Ø·ªöC 5: Kh·ªüi t·∫°o Dashboard
    // ============================================================
    DashboardManager.setupDashboard();
    
    // ============================================================
    // B∆Ø·ªöC 6: Th√†nh c√¥ng
    // ============================================================
    const totalBudget = setupData.budget.food + setupData.budget.transport + 
                        setupData.budget.housing + setupData.budget.health +
                        setupData.budget.education + setupData.budget.shopping +
                        setupData.budget.entertainment + setupData.budget.other;
    
    return {
      success: true,
      message: 
        '‚úÖ Kh·ªüi t·∫°o th√†nh c√¥ng!\n\n' +
        '‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n' +
        'üí∞ S·ªë d∆∞ ban ƒë·∫ßu: ' + formatCurrency(setupData.balance.amount) + '\n' +
        (setupData.debt ? 
          'üìã Kho·∫£n n·ª£: ' + setupData.debt.name + ' - ' + formatCurrency(setupData.debt.principal) + '\n' : 
          'üìã Kho·∫£n n·ª£: Kh√¥ng c√≥\n') +
        'üìä T·ªïng ng√¢n s√°ch/th√°ng: ' + formatCurrency(totalBudget) + '\n' +
        '‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n\n' +
        'üéâ H·ªá th·ªëng ƒë√£ s·∫µn s√†ng!\n' +
        'B·∫°n c√≥ th·ªÉ b·∫Øt ƒë·∫ßu nh·∫≠p li·ªáu qua Menu > Nh·∫≠p li·ªáu'
    };
    
  } catch (error) {
    Logger.log('Error in processSetupWizard: ' + error.toString());
    return {
      success: false,
      message: 'L·ªói kh·ªüi t·∫°o: ' + error.message + '\n\nVui l√≤ng th·ª≠ l·∫°i ho·∫∑c li√™n h·ªá h·ªó tr·ª£.'
    };
  }
}

// ==================== KH·ªûI T·∫†O T·ª™NG SHEET ====================

/**
 * Kh·ªüi t·∫°o Sheet THU
 */
function initializeIncomeSheet(skipConfirm) {
  if (!skipConfirm && !confirmInitialize('Sheet THU')) return;
  SheetInitializer.initializeIncomeSheet();
  if (!skipConfirm) showSuccess('Th√†nh c√¥ng', '‚úÖ ƒê√£ kh·ªüi t·∫°o Sheet THU!');
}

/**
 * Kh·ªüi t·∫°o Sheet CHI
 */
function initializeExpenseSheet(skipConfirm) {
  if (!skipConfirm && !confirmInitialize('Sheet CHI')) return;
  SheetInitializer.initializeExpenseSheet();
  if (!skipConfirm) showSuccess('Th√†nh c√¥ng', '‚úÖ ƒê√£ kh·ªüi t·∫°o Sheet CHI!');
}

/**
 * Kh·ªüi t·∫°o Sheet TR·∫¢ N·ª¢
 */
function initializeDebtPaymentSheet(skipConfirm) {
  if (!skipConfirm && !confirmInitialize('Sheet TR·∫¢ N·ª¢')) return;
  SheetInitializer.initializeDebtPaymentSheet();
  if (!skipConfirm) showSuccess('Th√†nh c√¥ng', '‚úÖ ƒê√£ kh·ªüi t·∫°o Sheet TR·∫¢ N·ª¢!');
}

/**
 * Kh·ªüi t·∫°o Sheet QU·∫¢N L√ù N·ª¢
 */
function initializeDebtManagementSheet(skipConfirm) {
  if (!skipConfirm && !confirmInitialize('Sheet QU·∫¢N L√ù N·ª¢')) return;
  SheetInitializer.initializeDebtManagementSheet();
  if (!skipConfirm) showSuccess('Th√†nh c√¥ng', '‚úÖ ƒê√£ kh·ªüi t·∫°o Sheet QU·∫¢N L√ù N·ª¢!');
}

/**
 * Kh·ªüi t·∫°o Sheet CH·ª®NG KHO√ÅN
 */
function initializeStockSheet(skipConfirm) {
  if (!skipConfirm && !confirmInitialize('Sheet CH·ª®NG KHO√ÅN')) return;
  SheetInitializer.initializeStockSheet();
  if (!skipConfirm) showSuccess('Th√†nh c√¥ng', '‚úÖ ƒê√£ kh·ªüi t·∫°o Sheet CH·ª®NG KHO√ÅN!');
}

/**
 * Kh·ªüi t·∫°o Sheet V√ÄNG
 */
function initializeGoldSheet(skipConfirm) {
  if (!skipConfirm && !confirmInitialize('Sheet V√ÄNG')) return;
  SheetInitializer.initializeGoldSheet();
  if (!skipConfirm) showSuccess('Th√†nh c√¥ng', '‚úÖ ƒê√£ kh·ªüi t·∫°o Sheet V√ÄNG!');
}

/**
 * Kh·ªüi t·∫°o Sheet CRYPTO
 */
function initializeCryptoSheet(skipConfirm) {
  if (!skipConfirm && !confirmInitialize('Sheet CRYPTO')) return;
  SheetInitializer.initializeCryptoSheet();
  if (!skipConfirm) showSuccess('Th√†nh c√¥ng', '‚úÖ ƒê√£ kh·ªüi t·∫°o Sheet CRYPTO!');
}

/**
 * Kh·ªüi t·∫°o Sheet ƒê·∫¶U T∆Ø KH√ÅC
 */
function initializeOtherInvestmentSheet(skipConfirm) {
  if (!skipConfirm && !confirmInitialize('Sheet ƒê·∫¶U T∆Ø KH√ÅC')) return;
  SheetInitializer.initializeOtherInvestmentSheet();
  if (!skipConfirm) showSuccess('Th√†nh c√¥ng', '‚úÖ ƒê√£ kh·ªüi t·∫°o Sheet ƒê·∫¶U T∆Ø KH√ÅC!');
}

/**
 * Kh·ªüi t·∫°o Sheet BUDGET
 */
function initializeBudgetSheet(skipConfirm) {
  if (!skipConfirm && !confirmInitialize('Sheet BUDGET')) return;
  SheetInitializer.initializeBudgetSheet();
  if (!skipConfirm) showSuccess('Th√†nh c√¥ng', '‚úÖ ƒê√£ kh·ªüi t·∫°o Sheet BUDGET!');
}

/**
 * Kh·ªüi t·∫°o Sheet T·ªîNG QUAN (Dashboard)
 */
function initializeDashboardSheet(skipConfirm) {
  if (!skipConfirm && !confirmInitialize('Sheet T·ªîNG QUAN')) return;
  DashboardManager.setupDashboard();
  if (!skipConfirm) showSuccess('Th√†nh c√¥ng', '‚úÖ ƒê√£ kh·ªüi t·∫°o Sheet T·ªîNG QUAN!');
}

// ==================== H∆Ø·ªöNG D·∫™N & GI·ªöI THI·ªÜU ====================

/**
 * Hi·ªÉn th·ªã h∆∞·ªõng d·∫´n s·ª≠ d·ª•ng
 */
function showInstructions() {
  const ui = SpreadsheetApp.getUi();
  ui.alert(
    'H∆∞·ªõng d·∫´n s·ª≠ d·ª•ng',
    'üìñ H∆Ø·ªöNG D·∫™N NHANH:\n\n' +
    '1Ô∏è‚É£ KH·ªûI T·∫†O:\n' +
    '   Menu > Kh·ªüi t·∫°o Sheet > Kh·ªüi t·∫°o T·∫§T C·∫¢ Sheet\n' +
    '   ‚Üí Setup Wizard s·∫Ω h∆∞·ªõng d·∫´n b·∫°n t·ª´ng b∆∞·ªõc!\n\n' +
    '2Ô∏è‚É£ NH·∫¨P LI·ªÜU:\n' +
    '   Menu > Nh·∫≠p li·ªáu > Ch·ªçn lo·∫°i giao d·ªãch\n\n' +
    '3Ô∏è‚É£ XEM TH·ªêNG K√ä:\n' +
    '   V√†o Sheet T·ªîNG QUAN\n' +
    '   Ch·ªçn Chu k·ª≥: T·∫•t c·∫£ / NƒÉm / Qu√Ω / Th√°ng\n\n' +
    '4Ô∏è‚É£ KI·ªÇM TRA BUDGET:\n' +
    '   Menu > Ng√¢n s√°ch > Ki·ªÉm tra Budget\n\n' +
    'üìö Chi ti·∫øt xem file README.md',
    ui.ButtonSet.OK
  );
}

/**
 * Hi·ªÉn th·ªã th√¥ng tin h·ªá th·ªëng
 */
function showAbout() {
  const ui = SpreadsheetApp.getUi();
  ui.alert(
    'Gi·ªõi thi·ªáu h·ªá th·ªëng',
    `üí∞ ${APP_CONFIG.APP_NAME} v${APP_CONFIG.VERSION}\n\n` +
    '‚ú® M·ªöI TRONG v3.2:\n' +
    '   ‚Ä¢ Setup Wizard 3 b∆∞·ªõc chuy√™n nghi·ªáp\n' +
    '   ‚Ä¢ Kh·ªüi t·∫°o v·ªõi d·ªØ li·ªáu th·∫≠t c·ªßa b·∫°n\n' +
    '   ‚Ä¢ Kh√¥ng c√≤n d·ªØ li·ªáu m·∫´u g√¢y nh·∫ßm l·∫´n\n\n' +
    'üéØ T√≠nh nƒÉng:\n' +
    '   ‚Ä¢ Qu·∫£n l√Ω thu chi h√†ng ng√†y\n' +
    '   ‚Ä¢ Theo d√µi n·ª£ v√† l√£i\n' +
    '   ‚Ä¢ ƒê·∫ßu t∆∞ ƒëa d·∫°ng (CK, V√†ng, Crypto)\n' +
    '   ‚Ä¢ Ng√¢n s√°ch th√¥ng minh\n' +
    '   ‚Ä¢ Dashboard tr·ª±c quan\n\n' +
    'üìä 10 Sheet:\n' +
    '   THU ‚Ä¢ CHI ‚Ä¢ TR·∫¢ N·ª¢ ‚Ä¢ QU·∫¢N L√ù N·ª¢\n' +
    '   CK ‚Ä¢ V√ÄNG ‚Ä¢ CRYPTO ‚Ä¢ ƒê·∫¶U T∆Ø KH√ÅC\n' +
    '   BUDGET ‚Ä¢ T·ªîNG QUAN\n\n' +
    'üë®‚Äçüíª Ph√°t tri·ªÉn b·ªüi: Claude & Nika\n' +
    'üìÖ Phi√™n b·∫£n: ' + APP_CONFIG.VERSION,
    ui.ButtonSet.OK
  );
}

// ==================== TI·ªÜN √çCH ====================

/**
 * T√¨m ki·∫øm giao d·ªãch
 */
function searchTransaction() {
  const ui = SpreadsheetApp.getUi();
  ui.alert(
    'T√¨m ki·∫øm',
    'üîç T√≠nh nƒÉng ƒëang ph√°t tri·ªÉn...\n\n' +
    'S·∫Ω cho ph√©p t√¨m ki·∫øm giao d·ªãch theo:\n' +
    '‚Ä¢ Ng√†y\n' +
    '‚Ä¢ S·ªë ti·ªÅn\n' +
    '‚Ä¢ Ghi ch√∫\n' +
    '‚Ä¢ Lo·∫°i giao d·ªãch',
    ui.ButtonSet.OK
  );
}

/**
 * Xu·∫•t b√°o c√°o PDF
 */
function exportToPDF() {
  const ui = SpreadsheetApp.getUi();
  ui.alert(
    'Xu·∫•t PDF',
    'üì§ T√≠nh nƒÉng ƒëang ph√°t tri·ªÉn...\n\n' +
    'S·∫Ω cho ph√©p xu·∫•t b√°o c√°o:\n' +
    '‚Ä¢ B√°o c√°o th√°ng\n' +
    '‚Ä¢ B√°o c√°o qu√Ω\n' +
    '‚Ä¢ B√°o c√°o nƒÉm',
    ui.ButtonSet.OK
  );
}

/**
 * X√≥a d·ªØ li·ªáu test
 */
function clearTestData() {
  const ui = SpreadsheetApp.getUi();
  const response = ui.alert(
    'X√°c nh·∫≠n',
    '‚ö†Ô∏è B·∫°n c√≥ ch·∫Øc mu·ªën x√≥a T·∫§T C·∫¢ d·ªØ li·ªáu test?\n\n' +
    'Thao t√°c n√†y KH√îNG TH·ªÇ HO√ÄN T√ÅC!',
    ui.ButtonSet.YES_NO
  );
  
  if (response === ui.Button.YES) {
    // TODO: Implement clear test data
    ui.alert('Th√¥ng b√°o', 'üîç T√≠nh nƒÉng ƒëang ph√°t tri·ªÉn...', ui.ButtonSet.OK);
  }
}

// ==================== UTILITY FUNCTIONS ====================

/**
 * X√°c nh·∫≠n tr∆∞·ªõc khi kh·ªüi t·∫°o sheet
 */
function confirmInitialize(sheetName) {
  const ui = SpreadsheetApp.getUi();
  const response = ui.alert(
    'X√°c nh·∫≠n',
    `‚ö†Ô∏è B·∫°n c√≥ ch·∫Øc mu·ªën kh·ªüi t·∫°o ${sheetName}?\n\n` +
    'L∆∞u √Ω: N·∫øu sheet ƒë√£ t·ªìn t·∫°i s·∫Ω B·ªä X√ìA v√† t·∫°o l·∫°i!',
    ui.ButtonSet.YES_NO
  );
  return response === ui.Button.YES;
}

/**
 * Hi·ªÉn th·ªã th√¥ng b√°o th√†nh c√¥ng
 */
function showSuccess(title, message) {
  SpreadsheetApp.getUi().alert(title, message, SpreadsheetApp.getUi().ButtonSet.OK);
}

/**
 * Hi·ªÉn th·ªã th√¥ng b√°o l·ªói
 */
function showError(title, message) {
  SpreadsheetApp.getUi().alert(
    title,
    `‚ùå ${message}\n\nVui l√≤ng th·ª≠ l·∫°i ho·∫∑c li√™n h·ªá h·ªó tr·ª£.`,
    SpreadsheetApp.getUi().ButtonSet.OK
  );
}

/**
 * L·∫•y spreadsheet hi·ªán t·∫°i
 */
function getSpreadsheet() {
  return SpreadsheetApp.getActiveSpreadsheet();
}

/**
 * L·∫•y sheet theo t√™n
 */
function getSheet(sheetName) {
  return getSpreadsheet().getSheetByName(sheetName);
}

/**
 * Force recalculate to√†n b·ªô sheet
 */
function forceRecalculate() {
  SpreadsheetApp.flush();
  getSpreadsheet().getSheets().forEach(sheet => {
    sheet.getDataRange().getValues();
  });
}

/**
 * L·∫•y ng√†y hi·ªán t·∫°i
 */
function getCurrentDate() {
  return new Date();
}

/**
 * Format s·ªë ti·ªÅn
 * @param {number} amount
 * @return {string}
 */
function formatCurrency(amount) {
  return new Intl.NumberFormat('vi-VN', {
    style: 'currency',
    currency: 'VND'
  }).format(amount);
}